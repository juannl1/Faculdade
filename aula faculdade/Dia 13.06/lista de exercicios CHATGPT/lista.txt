üü° 1Ô∏è‚É£ Listas ‚Äî Manipula√ß√£o e C√°lculo
Pe√ßa ao usu√°rio para digitar 6 n√∫meros e armazene-os em uma lista. Depois:

Exiba a m√©dia dos n√∫meros.

Exiba os n√∫meros em ordem crescente.

Exiba apenas os n√∫meros pares da lista.

üü¢ 2Ô∏è‚É£ Tuplas ‚Äî Acesso por √≠ndice
Crie uma tupla com quatro nomes digitados pelo usu√°rio. Depois:

Mostre o primeiro e o √∫ltimo nome.

Verifique se o nome "Maria" est√° na tupla.

Exiba todos os nomes, um por linha.

üîµ 3Ô∏è‚É£ Conjuntos ‚Äî Opera√ß√µes de conjunto
Solicite dois conjuntos de cores preferidas de duas pessoas diferentes. Depois:

Mostre as cores em comum.

Mostre as cores que s√≥ a primeira pessoa gosta.

Verifique se os conjuntos s√£o disjuntos (sem elementos em comum).

üü† 4Ô∏è‚É£ Dicion√°rio ‚Äî Dados pessoais
Crie um dicion√°rio com os seguintes dados de uma pessoa:

Nome

Idade

Profiss√£o

Sal√°rio

Depois:

Mostre os dados formatados.

Aumente o sal√°rio em 10% e mostre o novo valor.

Verifique se a chave "endere√ßo" existe no dicion√°rio.

üü£ 5Ô∏è‚É£ La√ßo for com range e list
Crie um programa que gere uma lista com os quadrados dos n√∫meros de 1 a 10. Depois:

Exiba os valores com for e enumerate, mostrando √≠ndice e valor.

Exiba a soma dos valores da lista.

üü§ 6Ô∏è‚É£ Fun√ß√£o sem par√¢metro
Crie uma fun√ß√£o chamada cabecalho() que exiba o seguinte:

diff
Copiar
Editar
======== IN√çCIO DO SISTEMA ========
E outra fun√ß√£o chamada rodape() que exiba:

diff
Copiar
Editar
======== FIM DO SISTEMA ==========
Utilize as duas fun√ß√µes no seu programa principal.

üî¥ 7Ô∏è‚É£ Fun√ß√£o com par√¢metro (calculadora simples)
Crie uma fun√ß√£o chamada calcula(operacao, a, b) que receba uma opera√ß√£o (+, -, *, /) e dois n√∫meros. Retorne o resultado da opera√ß√£o.

No programa, pe√ßa ao usu√°rio os dados e exiba o resultado.

‚ö´ 8Ô∏è‚É£ Fun√ß√£o com retorno (verifica√ß√£o)
Crie uma fun√ß√£o chamada eh_par(n) que retorna True se o n√∫mero for par e False se for √≠mpar. Use a fun√ß√£o para verificar v√°rios n√∫meros em uma lista.

‚ö™ 9Ô∏è‚É£ Fun√ß√£o com conjuntos
Crie duas listas de linguagens de programa√ß√£o aprendidas por dois alunos. Transforme em conjuntos e use uma fun√ß√£o linguagens_em_comum(l1, l2) que retorne as linguagens em comum. Mostre o resultado.

üü° üîü Escopo de vari√°veis
Crie uma vari√°vel global mensagem = "Ol√°, mundo!". Fa√ßa uma fun√ß√£o que crie uma vari√°vel local com o mesmo nome, mas diga "Ol√° do escopo local!". Mostre as duas mensagens, dentro e fora da fun√ß√£o.

‚úÖ Desafio b√¥nus ‚Äî Cadastro com fun√ß√µes
Crie um programa com as seguintes fun√ß√µes:

cadastrar_aluno(): cadastra um aluno (nome, idade, curso, conjunto de disciplinas).

mostrar_aluno(aluno): exibe os dados do aluno.

Cadastre dois alunos e exiba os dados de cada um usando a fun√ß√£o.

